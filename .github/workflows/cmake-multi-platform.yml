name: CMake

on:
  push:
    branches: [ "debug" ]
  pull_request:
    branches: [ "debug" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: lib install
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        sudo apt update
      
        sudo apt install libcgal-dev
      
        sudo apt install libeigen3-dev
      
        sudo apt install libgflags-dev

        cd TetWild
        
        mkdir build
        
        cd build
        
        cmake .. -DCMAKE_BUILD_TYPE=Release
        
        make
        
        cd ../..
        
        cd fTetWild
        
        mkdir build
        
        cd build
        
        cmake .. -DCMAKE_BUILD_TYPE=Release
        
        make
        
        cd ../..

        pwd
        
        git clone --recursive https://github.com/osqp/osqp
        
        cd osqp
        
        mkdir build
        
        cd build
        
        cmake .. -DBUILD_SHARED_LIBS=ON
        
        make
        
        sudo make install
        
        cd ../..
        
        git clone https://github.com/robotology/osqp-eigen.git
        
        cd osqp-eigen
        
        mkdir build
        
        cd build
        
        cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt ../
        
        make
        
        make install
        
        
    

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: |
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        ./PFPOffset -f ../data/variable_test_data/inlay_dovetail_3_offset.obj2  -i=1 -t=10
        cat ../data/variable_test_data/halved_oblique_scarf_3_offset._offset_outward_final_result.obj
